language: rust
cache: cargo

matrix:
  include:
  - os: osx
    rust: stable
    env: TARGET=x86_64-apple-darwin
  - os: linux
    rust: stable
    env: TARGET=x86_64-unknown-linux-gnu
  - os: linux
    rust: stable
    env: TARGET=i686-unknown-linux-gnu
  - os: linux
    rust: stable
    env: TARGET=aarch64-unknown-linux-gnu

install:
- rustup component add clippy

script:
- cargo clippy -- -D warnings
- cargo test --all
- if [ "$TARGET" = x86_64-unknown-linux-gnu ] && [ "$TRAVIS_RUST_VERSION" = stable
  ]; then rustup component add rustfmt; rustfmt -vV; cargo fmt --all -- --check; fi

before_deploy:
- cd example
- cargo run

deploy:
  provider: pages
  local_dir: example/public/html
  github_token: $GITHUB_ACCESS_TOKEN
  skip_cleanup: true
  target_branch: gh-pages
  keep_history: false
  verbose: true
  on:
    branch: master
    condition: $TARGET = x86_64-unknown-linux-gnu

notifications:
  email:
    on_success: never
    on_failure: always
